-- ========= CRIAÇÃO DAS TABELAS =========

CREATE TABLE usuarios (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    senha VARCHAR(255) NOT NULL,
    perfil VARCHAR(50) NOT NULL CHECK (perfil IN ('ADMINISTRADOR', 'CLIENTE', 'VENDEDOR')),
    data_criacao TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

COMMENT ON TABLE usuarios IS 'Armazena os usuários do sistema, incluindo clientes, vendedores e administradores.';
COMMENT ON COLUMN usuarios.perfil IS 'Define o nível de permissão do usuário no sistema.';

CREATE TABLE produtos (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(255) NOT NULL,
    descricao TEXT,
    preco DECIMAL(10, 2) NOT NULL CHECK (preco >= 0),
    qtd_estoque INT NOT NULL CHECK (qtd_estoque >= 0),
    data_criacao TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    data_atualizacao TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

COMMENT ON TABLE produtos IS 'Armazena o catálogo de produtos disponíveis para venda.';
COMMENT ON COLUMN produtos.qtd_estoque IS 'Quantidade do produto disponível em estoque.';

CREATE TABLE pedidos (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    cliente_id BIGINT NOT NULL,
    status VARCHAR(50) NOT NULL CHECK (status IN ('EM_ANDAMENTO', 'FINALIZADO', 'CANCELADO')) DEFAULT 'EM_ANDAMENTO',
    valor_total DECIMAL(10, 2) NOT NULL CHECK (valor_total >= 0),
    data_criacao TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    data_atualizacao TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT fk_pedidos_cliente
        FOREIGN KEY(cliente_id)
        REFERENCES usuarios(id)
        ON DELETE RESTRICT
);

COMMENT ON TABLE pedidos IS 'Registra os pedidos realizados pelos clientes.';
COMMENT ON COLUMN pedidos.status IS 'Status atual do pedido (ex: EM_ANDAMENTO, FINALIZADO).';
COMMENT ON CONSTRAINT fk_pedidos_cliente ON pedidos IS 'Garante que todo pedido esteja associado a um usuário cliente válido.';

CREATE TABLE pedido_itens (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    pedido_id BIGINT NOT NULL,
    produto_id BIGINT NOT NULL,
    quantidade INT NOT NULL CHECK (quantidade > 0),
    preco_unitario DECIMAL(10, 2) NOT NULL CHECK (preco_unitario >= 0),

    CONSTRAINT fk_item_pedido
        FOREIGN KEY(pedido_id)
        REFERENCES pedidos(id)
        ON DELETE CASCADE,

    CONSTRAINT fk_item_produto
        FOREIGN KEY(produto_id)
        REFERENCES produtos(id)
        ON DELETE RESTRICT
);

COMMENT ON TABLE pedido_itens IS 'Tabela associativa que detalha os produtos contidos em cada pedido.';
COMMENT ON COLUMN pedido_itens.preco_unitario IS 'Registra o preço do produto no momento da compra para histórico.';
COMMENT ON CONSTRAINT fk_item_pedido ON pedido_itens IS 'Associa o item a um pedido específico.';
COMMENT ON CONSTRAINT fk_item_produto ON pedido_itens IS 'Associa o item a um produto específico.';

-- ========= ÍNDICES PARA OTIMIZAÇÃO DE CONSULTAS =========
CREATE INDEX idx_usuarios_email ON usuarios(email);
CREATE INDEX idx_pedidos_cliente_id ON pedidos(cliente_id);
CREATE INDEX idx_pedidos_status ON pedidos(status);
CREATE INDEX idx_pedido_itens_pedido_id ON pedido_itens(pedido_id);
CREATE INDEX idx_pedido_itens_produto_id ON pedido_itens(produto_id);